[{"/Users/mehran/work/code/ergo-template/src/index.tsx":"1","/Users/mehran/work/code/ergo-template/src/reportWebVitals.ts":"2","/Users/mehran/work/code/ergo-template/src/App.tsx":"3","/Users/mehran/work/code/ergo-template/src/ergo-related/explorer.js":"4","/Users/mehran/work/code/ergo-template/src/ergo-related/rest.js":"5","/Users/mehran/work/code/ergo-template/src/my-ergo-page.js":"6","/Users/mehran/work/code/ergo-template/src/ergo-related/serializer.js":"7"},{"size":500,"mtime":1611319372257,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611319372261,"results":"10","hashOfConfig":"9"},{"size":530,"mtime":1611319443538,"results":"11","hashOfConfig":"9"},{"size":1911,"mtime":1611319372260,"results":"12","hashOfConfig":"9"},{"size":562,"mtime":1611319372259,"results":"13","hashOfConfig":"9"},{"size":2480,"mtime":1611319372261,"results":"14","hashOfConfig":"9"},{"size":1457,"mtime":1611319372260,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lkthuj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/mehran/work/code/ergo-template/src/index.tsx",[],"/Users/mehran/work/code/ergo-template/src/reportWebVitals.ts",[],["33","34"],"/Users/mehran/work/code/ergo-template/src/App.tsx",["35","36"],"/Users/mehran/work/code/ergo-template/src/ergo-related/explorer.js",[],["37","38"],"/Users/mehran/work/code/ergo-template/src/ergo-related/rest.js",[],"/Users/mehran/work/code/ergo-template/src/my-ergo-page.js",["39"],"import React, {Fragment} from 'react';\nimport {currentHeight, getTokenBox} from \"./ergo-related/explorer\";\nimport {decodeNum, decodeString, encodeNum, encodeStr} from \"./ergo-related/serializer\";\n\n\nexport default class MyErgoPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: NaN,\n            tokenId: '01004ddddd67da4b34ab2a5a99f2fed6f1f280e3289508ed5b44ae2d948279ee'\n        };\n        this.decodeToken = this.decodeToken.bind(this)\n    }\n\n    componentDidMount() {\n        currentHeight().then(res => {\n            this.setState({height: res})\n        })\n        this.decodeToken(this.state.tokenId)\n    }\n\n    async decodeToken(tokenId) {\n        let box = await getTokenBox(tokenId)\n        if (!box) return\n        let name = await decodeString(box.additionalRegisters.R4)\n        let description = await decodeString(box.additionalRegisters.R5)\n        let decimals = await decodeString(box.additionalRegisters.R6)\n        this.setState({name: name, description: description, decimals: decimals})\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <p>Current Blockchain Height: {this.state.height}</p>\n                <p>\n                    Encode Number: <input\n                    onChange={(e) => encodeNum(e.target.value).then(res => this.setState({encodedNum: res}))}\n                    type='number' step=\"1\" placeholder='Enter a number'/> {this.state.encodedNum}\n                </p>\n                <p>\n                    Encode String: <input\n                    onChange={(e) => encodeStr(e.target.value).then(res => this.setState({encodedStr: res}))}\n                    type='text' step=\"1\" placeholder='Enter text'/> {this.state.encodedStr}\n                </p>\n                <p>\n                    Decode Token Fields: <input\n                    defaultValue={this.state.tokenId}\n                    style={{width: '100%'}}\n                    onChange={(e) => {\n                        this.setState({tokenId: e.target.value})\n                        this.decodeToken(e.target.value)\n                    }}\n                    type='text' placeholder='Enter token ID'/>\n                    <p>token's name: {this.state.name}</p>\n                    <p>token's description: {this.state.description}</p>\n                    <p>token's decimals: {this.state.decimals}</p>\n                </p>\n                <br/>\n            </Fragment>\n        );\n    }\n}\n","/Users/mehran/work/code/ergo-template/src/ergo-related/serializer.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":4,"column":9,"nodeType":"46","messageId":"47","endLine":4,"endColumn":22},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"49","severity":1,"message":"50","line":3,"column":9,"nodeType":"46","messageId":"47","endLine":3,"endColumn":18},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'currentHeight' is defined but never used.","no-unused-vars","'decodeNum' is defined but never used.","no-global-assign","no-unsafe-negation"]